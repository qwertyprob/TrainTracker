// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainTracker.DAL.Entities;

#nullable disable

namespace TrainTracker.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251007213635_ШÑIncindentUnique")]
    partial class ШÑIncindentUnique
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TrainTracker.DAL.Entities.IncidentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("TrainId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("TrainTracker.DAL.Entities.StationEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("StationTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("TrainId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainId")
                        .IsUnique();

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("TrainTracker.DAL.Entities.TrainEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DelayTime")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDelayUpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("TrainTracker.DAL.Entities.IncidentEntity", b =>
                {
                    b.HasOne("TrainTracker.DAL.Entities.TrainEntity", "Train")
                        .WithMany("Incidents")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainTracker.DAL.Entities.StationEntity", b =>
                {
                    b.HasOne("TrainTracker.DAL.Entities.TrainEntity", "Train")
                        .WithOne("NextStation")
                        .HasForeignKey("TrainTracker.DAL.Entities.StationEntity", "TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TrainTracker.DAL.Entities.TrainEntity", b =>
                {
                    b.Navigation("Incidents");

                    b.Navigation("NextStation");
                });
#pragma warning restore 612, 618
        }
    }
}
